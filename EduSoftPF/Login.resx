<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ptbLogoInicio.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAeAB4AAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAAqACoDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9/KKKKAPO/wBp39pjw7+yl8K73xV4jN09tbDEVvawPNNcPgkK
        qqDgccscAdzzXxl+xd/wcA+E/wBoX4tzeF/GOif8Ib/aV4INCulZpo7gM22NJsZ2yHI6fL71yH/BwB8Z
        PiRZeA/7Bsk0Tw94JL7Zrm4vkXUdac9UhjI3bF/ixz8w5r8p/wBmzXNX8NfHPwzf6DfaLp2r2d6ktrPq
        0iR2auOQJGcEAHp+PGDX5hiuMMTTz9YaH8FOMXHl1d3q11v/AC7emuv5Fx3xpjctzGlhsFooq8rx0lfp
        ra6XlbW+p/UujiRQQQQRkEd6WuH/AGdfG2v/ABA+EOj6l4m0q30fWpYF+0w204nt3OBh43AwUYYI+tdx
        X6g1Zn6thq6rUo1o7SV9VZ/ccl/wvzwL/wBDp4T/APBvb/8AxdZPjz49eH28GamPDvjTwL/bptpBYG81
        mFbcTbTsLkEnbuxnAPFfg1+wP+3V4C/Zi8EeKPD3jf4X6X4xg1+IiHUltoJdQs3wVGwzhkUAMTwM5Ap3
        wv8ACP7IfxCbULnxV4y+L/gibzS0UT2VrfCcHkkeRAQoBJGD6V+cVeM3XhGnR5Pejd+/yOL6q7W66NfI
        /LMP4m+2ownTjTVRt3jKbja2z5nHldz7M/ah/wCCV+hftD3Wq+PPHn7TWm6t4m+yvM1pALV7aEqCRDDm
        cEJnp8vfpXxD/wAE6v2HPC37Z3xI8Q6L4l+IMHgS20a1+0Q3UqQsLpvMVdo8yRB0OeCeld/pn7DX7Nn7
        Qfiiy0D4UfH28sNYk3NJ/wAJnpjWcEw4CrE4jjBck/dySe1eo+Mf+DaH4l6H4au7rSvHXhbXL+FN0Nil
        vLbm4b+6HchV+pr5l5bUqV/r1LAqdJKV1Go5KT/mTTcm12W7PksZl9bNMRDEYXBxqcrvUca3Pz36Sd9N
        r6H3X+w38MI/2LbRfDUvx+8OeO/BMcP+jW+o3lvBcac+T8sRErjy+hxkck+tfXtfy3/tH/sweNv2TviH
        L4Y8c6NLo+qxoJFG4SRToejRyD5XHUZBPII7V/UhX3vCefyzGNSlKnyeystW5PXm0beulut+3Q/SOBc1
        lXjWwLw7oex5fdcpNrmvp72qWmi8z+TGONppAqqWZjgADJJr0j4QfsefFD496lcWnhHwN4h1qe0jEsyx
        WpXy1JwDlsV/RjY/sJ/BDTLyK4tvg38Kre4gcSRSxeErBHjYHIZSIsgg9xXqcUSwRKiKqIgCqqjAUDoA
        K+SybgOjiYOrWquydrJW6d7v8j86yLw5p46pJVa7SjbaOr+d9PuZ+TH/AAT8/wCDffW/C3jnSvF/xa1O
        zt00yVLm30SwJlaZhyPNlONuO6hTn14r9UfGfjzRPhtoE+pa5qdjpNhaxtLJNcyiNVVQSTz1wAelbFcv
        8Tfgh4L+Ndlb23jLwh4X8W29m/mwRa1pUF+kD4I3KJVYKcEjI9a++lQo5PgHTwUbK/W71dld99l28rH6
        3luRYHh/BVJ4ON3a7besrbXflfSyPwL/AOCxX7a+lftn/tSPe+Hfn8OeHrVdNsrg9bvDMzS+wJbAH+zn
        vX9DleS/8MDfAr/oivwl/wDCQ0//AOM161Xg8F4CdCpiatSfNKbTeltbyb6+Z5nCCrVMbjMdiJ80qnJs
        rJJcySWr6H//2Q==
</value>
  </data>
</root>